<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:MetroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:MetroConverters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
    xmlns:local="clr-namespace:unBand"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" x:Class="unBand.App"
    StartupUri="MainWindow.xaml"
    DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Purple.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <local:OppositeBoolToVisibilityConverter x:Key="OppositeBoolToVisibilityConverter" />
            <local:PropValueToVisibilityConverter x:Key="PropValueToVisibilityConverter" />
            <local:EventTypeToImageConverter x:Key="EventTypeToImageConverter" />
            <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <local:ReverseBoolConverter x:Key="ReverseBoolConverter" />

            <Style x:Key="RightVerticalExpanderHeader" TargetType="{x:Type Expander}"
                   BasedOn="{StaticResource MetroExpander}">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentPresenter
                                Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}},
                                              Path=Header,
                                              Mode=OneWay,
                                              Converter={MetroConverters:ToUpperConverter}}">

                                <!-- rotate the actual header so that it's vertical -->

                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </ContentPresenter.LayoutTransform>

                                <TextElement.Foreground>
                                    <MultiBinding
                                        Converter="{x:Static MetroConverters:BackgroundToForegroundConverter.Instance}">
                                        <Binding Mode="OneWay"
                                                 Path="Background"
                                                 RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type Expander}}" />
                                        <Binding Mode="OneWay"
                                                 Path="(MetroControls:GroupBoxHelper.HeaderForeground)"
                                                 RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type Expander}}" />

                                    </MultiBinding>
                                </TextElement.Foreground>
                            </ContentPresenter>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuImageButton" TargetType="{x:Type Button}">
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Background" Padding="0,5,0,5" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Rectangle x:Name="DisabledVisualElement"
                                               Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False"
                                               Opacity="0" />
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content, Converter={MetroConverters:ToUpperConverter}}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                    <Polygon x:Name="Chevron" Visibility="Hidden" Points="46,10 46,18 40,14"
                                             Stroke="White" Fill="White" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="#bdb7f9" />
                                    <Setter Property="Visibility" TargetName="Chevron" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Background"
                                            Value="{DynamicResource GrayBrush7}" />
                                    <Setter Property="Visibility" TargetName="Chevron" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Background"
                                            Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                    <Setter Property="Visibility" TargetName="Chevron" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7" />
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>